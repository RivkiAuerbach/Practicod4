{"ast":null,"code":"import axios from 'axios';\nconst apiUrl = \"http://localhost:5117\";\n\n// export default {\n//   getTasks: async () => {\n//     const result = await axios.get(`${apiUrl}/tasks`)    \n//     return result.data;\n//   },\n//   addTask: async(name)=>{\n//     console.log('addTask', name)\n//     const result = await axios.post(`${apiUrl}/tasks`, { name });\n//     return result.data;\n//   },\n//   setCompleted: async (id, isComplete) => {\n//     console.log('setCompleted', { id, isComplete });\n//     const answer = await axios.get(`/items`);\n//     const item = answer.data.find(item => item.id === parseInt(id));\n//     if (!item) {\n//       console.error(`Item with id ${id} not found.`);\n//       return null;\n//     }\n//     const result = await axios.put(`/items/${id}`, {\n//       Id: item.id,\n//       Name: item.name,\n//       IsComplete: isComplete     \n//     });\n//     return result.data;\n//   },\n//   deleteTask:async(id)=>{\n//     console.log('deleteTask')\n//     const result = await axios.delete(`${apiUrl}/tasks/${id}`);\n//     return result.data;\n//   }\n\n// };\n\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`/items`);\n    return result.data;\n  },\n  addTask: async name => {\n    try {\n      const newItem = {\n        id: 0,\n        name: name,\n        isComplete: false\n      };\n      const result = await axios.post(`/items`, newItem);\n      return result.data;\n    } catch (error) {\n      console.error(\"Error adding task:\", error);\n      throw error;\n    }\n  },\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', {\n      id,\n      isComplete\n    });\n    const answer = await axios.get(`/items`);\n    const item = answer.data.find(item => item.id === parseInt(id));\n    if (!item) {\n      console.error(`Item with id ${id} not found.`);\n      return null;\n    }\n    const result = await axios.put(`/items/${id}`, {\n      Id: item.id,\n      Name: item.name,\n      IsComplete: isComplete\n    });\n    return result.data;\n  },\n  deleteTask: async id => {\n    console.log('deleteTask');\n    const result = await axios.delete(`/items/${id}`);\n    return result;\n  }\n};\n\n// import axios from 'axios';\n\n// // הגדרת כתובת ה-API כ-default עם ה-port הנכון\n// axios.defaults.baseURL = \"http://localhost:5117\";\n\n// // הוספת interceptor שתופס את השגיאות ב-response ורושם ללוג\n// axios.interceptors.response.use(\n//   function (response) {\n//     return response;\n//   },\n//   function (error) {\n//     console.error('Request failed:', error.message);\n//     return Promise.reject(error);\n//   }\n// );\n\n// const TaskService = {\n//   getTasks: async () => {\n//     try {\n//       const result = await axios.get('/tasks');\n//       return result.data;\n//     } catch (error) {\n//       console.error('Error fetching tasks:', error);\n//       throw error;\n//     }\n//   },\n\n//   addTask: async (name) => {\n//     try {\n//       const result = await axios.post('/task', { name});\n//       return result.data;\n//     } catch (error) {\n//       console.error('Error adding task:', error);\n//       throw error;\n//     }\n//   },\n\n//   setCompleted: async (id, isComplete) => {\n//     try {\n//       const result = await axios.put(`/task/${id}`, { isComplete });\n//       return result.data;\n//     } catch (error) {\n//       console.error('Error setting task completion:', error);\n//       throw error;\n//     }\n//   },\n\n//   deleteTask: async (id) => {\n//     try {\n//       await axios.delete(`/task/${id}`);\n//       console.log('Task deleted successfully');\n//     } catch (error) {\n//       console.error('Error deleting task:', error);\n//       throw error;\n//     }\n//   },\n// };\n\n// export default TaskService;","map":{"version":3,"names":["axios","apiUrl","getTasks","result","get","data","addTask","name","newItem","id","isComplete","post","error","console","setCompleted","log","answer","item","find","parseInt","put","Id","Name","IsComplete","deleteTask","delete"],"sources":["C:/Users/user1/Desktop/לימודים שנה ב/פרקטיקוד/Practicod4/ToDoListReact-master/src/service.js"],"sourcesContent":["import axios from 'axios';\n\nconst apiUrl = \"http://localhost:5117\"\n\n// export default {\n//   getTasks: async () => {\n//     const result = await axios.get(`${apiUrl}/tasks`)    \n//     return result.data;\n//   },\n//   addTask: async(name)=>{\n//     console.log('addTask', name)\n//     const result = await axios.post(`${apiUrl}/tasks`, { name });\n//     return result.data;\n//   },\n//   setCompleted: async (id, isComplete) => {\n//     console.log('setCompleted', { id, isComplete });\n//     const answer = await axios.get(`/items`);\n//     const item = answer.data.find(item => item.id === parseInt(id));\n//     if (!item) {\n//       console.error(`Item with id ${id} not found.`);\n//       return null;\n//     }\n//     const result = await axios.put(`/items/${id}`, {\n//       Id: item.id,\n//       Name: item.name,\n//       IsComplete: isComplete     \n//     });\n//     return result.data;\n//   },\n//   deleteTask:async(id)=>{\n//     console.log('deleteTask')\n//     const result = await axios.delete(`${apiUrl}/tasks/${id}`);\n//     return result.data;\n//   }\n\n  \n\n// };\n\n\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`/items`)\n    return result.data;\n  },\n\n  addTask: async (name) => {\n    try {\n      const newItem = {\n        id:0,\n        name: name,\n        isComplete: false\n      };\n      const result = await axios.post(`/items`, newItem);\n      return result.data;\n    } catch (error) {\n      console.error(\"Error adding task:\", error);\n      throw error;\n    }\n  },\n\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', { id, isComplete });\n    const answer = await axios.get(`/items`);\n    const item = answer.data.find(item => item.id === parseInt(id));\n    if (!item) {\n      console.error(`Item with id ${id} not found.`);\n      return null;\n    }\n    const result = await axios.put(`/items/${id}`, {\n      Id: item.id,\n      Name: item.name,\n      IsComplete: isComplete     \n    });\n    return result.data;\n  },\n\n  deleteTask: async (id) => {\n    console.log('deleteTask');\n    const result = await axios.delete(`/items/${id}`);\n    return result;\n  }\n\n\n};\n\n\n\n\n\n\n// import axios from 'axios';\n\n// // הגדרת כתובת ה-API כ-default עם ה-port הנכון\n// axios.defaults.baseURL = \"http://localhost:5117\";\n\n// // הוספת interceptor שתופס את השגיאות ב-response ורושם ללוג\n// axios.interceptors.response.use(\n//   function (response) {\n//     return response;\n//   },\n//   function (error) {\n//     console.error('Request failed:', error.message);\n//     return Promise.reject(error);\n//   }\n// );\n\n// const TaskService = {\n//   getTasks: async () => {\n//     try {\n//       const result = await axios.get('/tasks');\n//       return result.data;\n//     } catch (error) {\n//       console.error('Error fetching tasks:', error);\n//       throw error;\n//     }\n//   },\n\n//   addTask: async (name) => {\n//     try {\n//       const result = await axios.post('/task', { name});\n//       return result.data;\n//     } catch (error) {\n//       console.error('Error adding task:', error);\n//       throw error;\n//     }\n//   },\n\n//   setCompleted: async (id, isComplete) => {\n//     try {\n//       const result = await axios.put(`/task/${id}`, { isComplete });\n//       return result.data;\n//     } catch (error) {\n//       console.error('Error setting task completion:', error);\n//       throw error;\n//     }\n//   },\n\n//   deleteTask: async (id) => {\n//     try {\n//       await axios.delete(`/task/${id}`);\n//       console.log('Task deleted successfully');\n//     } catch (error) {\n//       console.error('Error deleting task:', error);\n//       throw error;\n//     }\n//   },\n// };\n\n// export default TaskService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAG,uBAAuB;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAGA,eAAe;EACbC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,MAAM,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,QAAO,CAAC;IACxC,OAAOD,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDC,OAAO,EAAE,MAAOC,IAAI,IAAK;IACvB,IAAI;MACF,MAAMC,OAAO,GAAG;QACdC,EAAE,EAAC,CAAC;QACJF,IAAI,EAAEA,IAAI;QACVG,UAAU,EAAE;MACd,CAAC;MACD,MAAMP,MAAM,GAAG,MAAMH,KAAK,CAACW,IAAI,CAAE,QAAO,EAAEH,OAAO,CAAC;MAClD,OAAOL,MAAM,CAACE,IAAI;IACpB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C,MAAMA,KAAK;IACb;EACF,CAAC;EAEDE,YAAY,EAAE,MAAAA,CAAOL,EAAE,EAAEC,UAAU,KAAK;IACtCG,OAAO,CAACE,GAAG,CAAC,cAAc,EAAE;MAAEN,EAAE;MAAEC;IAAW,CAAC,CAAC;IAC/C,MAAMM,MAAM,GAAG,MAAMhB,KAAK,CAACI,GAAG,CAAE,QAAO,CAAC;IACxC,MAAMa,IAAI,GAAGD,MAAM,CAACX,IAAI,CAACa,IAAI,CAACD,IAAI,IAAIA,IAAI,CAACR,EAAE,KAAKU,QAAQ,CAACV,EAAE,CAAC,CAAC;IAC/D,IAAI,CAACQ,IAAI,EAAE;MACTJ,OAAO,CAACD,KAAK,CAAE,gBAAeH,EAAG,aAAY,CAAC;MAC9C,OAAO,IAAI;IACb;IACA,MAAMN,MAAM,GAAG,MAAMH,KAAK,CAACoB,GAAG,CAAE,UAASX,EAAG,EAAC,EAAE;MAC7CY,EAAE,EAAEJ,IAAI,CAACR,EAAE;MACXa,IAAI,EAAEL,IAAI,CAACV,IAAI;MACfgB,UAAU,EAAEb;IACd,CAAC,CAAC;IACF,OAAOP,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDmB,UAAU,EAAE,MAAOf,EAAE,IAAK;IACxBI,OAAO,CAACE,GAAG,CAAC,YAAY,CAAC;IACzB,MAAMZ,MAAM,GAAG,MAAMH,KAAK,CAACyB,MAAM,CAAE,UAAShB,EAAG,EAAC,CAAC;IACjD,OAAON,MAAM;EACf;AAGF,CAAC;;AAOD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}