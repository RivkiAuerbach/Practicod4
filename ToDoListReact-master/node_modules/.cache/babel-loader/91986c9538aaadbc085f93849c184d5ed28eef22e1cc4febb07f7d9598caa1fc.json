{"ast":null,"code":"import axios from 'axios';\nconst apiUrl = \"http://localhost:5117\";\n\n// export default {\n//   getTasks: async () => {\n//     const result = await axios.get(`${apiUrl}/tasks`)    \n//     return result.data;\n//   },\n//   addTask: async(name)=>{\n//     console.log('addTask', name)\n//     const result = await axios.post(`${apiUrl}/tasks`, { name });\n//     return result.data;\n//   },\n//   setCompleted: async (id, isComplete) => {\n//     console.log('setCompleted', { id, isComplete });\n//     const answer = await axios.get(`/items`);\n//     const item = answer.data.find(item => item.id === parseInt(id));\n//     if (!item) {\n//       console.error(`Item with id ${id} not found.`);\n//       return null;\n//     }\n//     const result = await axios.put(`/items/${id}`, {\n//       Id: item.id,\n//       Name: item.name,\n//       IsComplete: isComplete     \n//     });\n//     return result.data;\n//   },\n//   deleteTask:async(id)=>{\n//     console.log('deleteTask')\n//     const result = await axios.delete(`${apiUrl}/tasks/${id}`);\n//     return result.data;\n//   }\n\n// };\n\n// import axios from 'axios';\n\n// // הגדרת כתובת ה-API כ-default עם ה-port הנכון\n// axios.defaults.baseURL = \"http://localhost:5117\";\n\n// // הוספת interceptor שתופס את השגיאות ב-response ורושם ללוג\n// axios.interceptors.response.use(\n//   function (response) {\n//     return response;\n//   },\n//   function (error) {\n//     console.error('Request failed:', error.message);\n//     return Promise.reject(error);\n//   }\n// );\n\n// const TaskService = {\n//   getTasks: async () => {\n//     try {\n//       const result = await axios.get('/tasks');\n//       return result.data;\n//     } catch (error) {\n//       console.error('Error fetching tasks:', error);\n//       throw error;\n//     }\n//   },\n\n//   addTask: async (name) => {\n//     try {\n//       const result = await axios.post('/task', { name});\n//       return result.data;\n//     } catch (error) {\n//       console.error('Error adding task:', error);\n//       throw error;\n//     }\n//   },\n\n//   setCompleted: async (id, isComplete) => {\n//     try {\n//       const result = await axios.put(`/task/${id}`, { isComplete });\n//       return result.data;\n//     } catch (error) {\n//       console.error('Error setting task completion:', error);\n//       throw error;\n//     }\n//   },\n\n//   deleteTask: async (id) => {\n//     try {\n//       await axios.delete(`/task/${id}`);\n//       console.log('Task deleted successfully');\n//     } catch (error) {\n//       console.error('Error deleting task:', error);\n//       throw error;\n//     }\n//   },\n// };\n\n// export default TaskService;","map":{"version":3,"names":["axios","apiUrl"],"sources":["C:/Users/user1/Desktop/לימודים שנה ב/פרקטיקוד/Practicod4/ToDoListReact-master/src/service.js"],"sourcesContent":["import axios from 'axios';\n\nconst apiUrl = \"http://localhost:5117\"\n\n// export default {\n//   getTasks: async () => {\n//     const result = await axios.get(`${apiUrl}/tasks`)    \n//     return result.data;\n//   },\n//   addTask: async(name)=>{\n//     console.log('addTask', name)\n//     const result = await axios.post(`${apiUrl}/tasks`, { name });\n//     return result.data;\n//   },\n//   setCompleted: async (id, isComplete) => {\n//     console.log('setCompleted', { id, isComplete });\n//     const answer = await axios.get(`/items`);\n//     const item = answer.data.find(item => item.id === parseInt(id));\n//     if (!item) {\n//       console.error(`Item with id ${id} not found.`);\n//       return null;\n//     }\n//     const result = await axios.put(`/items/${id}`, {\n//       Id: item.id,\n//       Name: item.name,\n//       IsComplete: isComplete     \n//     });\n//     return result.data;\n//   },\n//   deleteTask:async(id)=>{\n//     console.log('deleteTask')\n//     const result = await axios.delete(`${apiUrl}/tasks/${id}`);\n//     return result.data;\n//   }\n\n  \n\n// };\n\n\n\n\n\n\n\n\n// import axios from 'axios';\n\n// // הגדרת כתובת ה-API כ-default עם ה-port הנכון\n// axios.defaults.baseURL = \"http://localhost:5117\";\n\n// // הוספת interceptor שתופס את השגיאות ב-response ורושם ללוג\n// axios.interceptors.response.use(\n//   function (response) {\n//     return response;\n//   },\n//   function (error) {\n//     console.error('Request failed:', error.message);\n//     return Promise.reject(error);\n//   }\n// );\n\n// const TaskService = {\n//   getTasks: async () => {\n//     try {\n//       const result = await axios.get('/tasks');\n//       return result.data;\n//     } catch (error) {\n//       console.error('Error fetching tasks:', error);\n//       throw error;\n//     }\n//   },\n\n//   addTask: async (name) => {\n//     try {\n//       const result = await axios.post('/task', { name});\n//       return result.data;\n//     } catch (error) {\n//       console.error('Error adding task:', error);\n//       throw error;\n//     }\n//   },\n\n//   setCompleted: async (id, isComplete) => {\n//     try {\n//       const result = await axios.put(`/task/${id}`, { isComplete });\n//       return result.data;\n//     } catch (error) {\n//       console.error('Error setting task completion:', error);\n//       throw error;\n//     }\n//   },\n\n//   deleteTask: async (id) => {\n//     try {\n//       await axios.delete(`/task/${id}`);\n//       console.log('Task deleted successfully');\n//     } catch (error) {\n//       console.error('Error deleting task:', error);\n//       throw error;\n//     }\n//   },\n// };\n\n// export default TaskService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAG,uBAAuB;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AASA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}