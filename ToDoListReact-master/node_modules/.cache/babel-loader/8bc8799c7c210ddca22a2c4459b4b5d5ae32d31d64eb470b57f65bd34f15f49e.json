{"ast":null,"code":"import axios from 'axios';\nconst apiUrl = \"http://localhost:5117\";\n\n// // Config Defaults - הגדרת כתובת API כ-default\n// axios.defaults.baseURL = apiUrl;\n\n// // Interceptor לטיפול בשגיאות ב-response\n// axios.interceptors.response.use(\n//   (response) => response, // אם התקבל response בהצלחה, החזר את ה-response כמו שהוא\n//   (error) => {\n//     // אם קיבלנו שגיאה ב-response, עבור על השגיאה ורושם ללוג\n//     console.error('Error in API response:', error.response);\n//     return Promise.reject(error);\n//   }\n// );\n\nexport default {\n  getTasks: async () => {\n    console.log(\"I am here\");\n    const result = await axios.get(`${apiUrl}/tasks`);\n    return result.data;\n  },\n  addTask: async name => {\n    console.log('addTask', name);\n    const result = await axios.post(`${apiUrl}/tasks`, {\n      name\n    });\n    return result.data;\n    // return {};\n  },\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', {\n      id,\n      isComplete\n    });\n    const answer = await axios.get(`/tasks`);\n    const item = answer.data.find(item => item.id === parseInt(id));\n    if (!item) {\n      console.error(`Item with id ${id} not found.`);\n      return null;\n    }\n    const result = await axios.put(`/tasks/${id}`, {\n      Id: item.id,\n      Name: item.name,\n      IsComplete: isComplete\n    });\n    return result.data;\n  },\n  deleteTask: async id => {\n    console.log('deleteTask');\n    const result = await axios.delete(`/tasks/${id}`);\n    return result;\n  }\n};\n\n// import axios from 'axios';\n\n// // הגדרת כתובת ה-API כ-default עם ה-port הנכון\n// axios.defaults.baseURL = \"http://localhost:5117\";\n\n// // הוספת interceptor שתופס את השגיאות ב-response ורושם ללוג\n// axios.interceptors.response.use(\n//   function (response) {\n//     return response;\n//   },\n//   function (error) {\n//     console.error('Request failed:', error.message);\n//     return Promise.reject(error);\n//   }\n// );\n\n// const TaskService = {\n//   getTasks: async () => {\n//     try {\n//       const result = await axios.get('/tasks');\n//       return result.data;\n//     } catch (error) {\n//       console.error('Error fetching tasks:', error);\n//       throw error;\n//     }\n//   },\n\n//   addTask: async (name) => {\n//     try {\n//       const result = await axios.post('/task', { name});\n//       return result.data;\n//     } catch (error) {\n//       console.error('Error adding task:', error);\n//       throw error;\n//     }\n//   },\n\n//   setCompleted: async (id, isComplete) => {\n//     try {\n//       const result = await axios.put(`/task/${id}`, { isComplete });\n//       return result.data;\n//     } catch (error) {\n//       console.error('Error setting task completion:', error);\n//       throw error;\n//     }\n//   },\n\n//   deleteTask: async (id) => {\n//     try {\n//       await axios.delete(`/task/${id}`);\n//       console.log('Task deleted successfully');\n//     } catch (error) {\n//       console.error('Error deleting task:', error);\n//       throw error;\n//     }\n//   },\n// };\n\n// export default TaskService;","map":{"version":3,"names":["axios","apiUrl","getTasks","console","log","result","get","data","addTask","name","post","setCompleted","id","isComplete","answer","item","find","parseInt","error","put","Id","Name","IsComplete","deleteTask","delete"],"sources":["C:/Users/user1/Desktop/לימודים שנה ב/פרקטיקוד/Practicod4/ToDoListReact-master/src/service.js"],"sourcesContent":["import axios from 'axios';\n\nconst apiUrl = \"http://localhost:5117\"\n\n// // Config Defaults - הגדרת כתובת API כ-default\n// axios.defaults.baseURL = apiUrl;\n\n// // Interceptor לטיפול בשגיאות ב-response\n// axios.interceptors.response.use(\n//   (response) => response, // אם התקבל response בהצלחה, החזר את ה-response כמו שהוא\n//   (error) => {\n//     // אם קיבלנו שגיאה ב-response, עבור על השגיאה ורושם ללוג\n//     console.error('Error in API response:', error.response);\n//     return Promise.reject(error);\n//   }\n// );\n\nexport default {\n  getTasks: async () => {\n    console.log(\"I am here\")\n    const result = await axios.get(`${apiUrl}/tasks`)    \n    return result.data;\n  },\n  addTask: async(name)=>{\n    console.log('addTask', name)\n    const result = await axios.post(`${apiUrl}/tasks`, { name });\n    return result.data;\n    // return {};\n  },\n\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', { id, isComplete });\n    const answer = await axios.get(`/tasks`);\n    const item = answer.data.find(item => item.id === parseInt(id));\n    if (!item) {\n      console.error(`Item with id ${id} not found.`);\n      return null;\n    }\n    const result = await axios.put(`/tasks/${id}`, {\n      Id: item.id,\n      Name: item.name,\n      IsComplete: isComplete     \n    });\n    return result.data;\n  },\n\n  deleteTask: async (id) => {\n    console.log('deleteTask');\n    const result = await axios.delete(`/tasks/${id}`);\n    return result;\n  }\n};\n\n\n\n\n\n// import axios from 'axios';\n\n// // הגדרת כתובת ה-API כ-default עם ה-port הנכון\n// axios.defaults.baseURL = \"http://localhost:5117\";\n\n// // הוספת interceptor שתופס את השגיאות ב-response ורושם ללוג\n// axios.interceptors.response.use(\n//   function (response) {\n//     return response;\n//   },\n//   function (error) {\n//     console.error('Request failed:', error.message);\n//     return Promise.reject(error);\n//   }\n// );\n\n// const TaskService = {\n//   getTasks: async () => {\n//     try {\n//       const result = await axios.get('/tasks');\n//       return result.data;\n//     } catch (error) {\n//       console.error('Error fetching tasks:', error);\n//       throw error;\n//     }\n//   },\n\n//   addTask: async (name) => {\n//     try {\n//       const result = await axios.post('/task', { name});\n//       return result.data;\n//     } catch (error) {\n//       console.error('Error adding task:', error);\n//       throw error;\n//     }\n//   },\n\n//   setCompleted: async (id, isComplete) => {\n//     try {\n//       const result = await axios.put(`/task/${id}`, { isComplete });\n//       return result.data;\n//     } catch (error) {\n//       console.error('Error setting task completion:', error);\n//       throw error;\n//     }\n//   },\n\n//   deleteTask: async (id) => {\n//     try {\n//       await axios.delete(`/task/${id}`);\n//       console.log('Task deleted successfully');\n//     } catch (error) {\n//       console.error('Error deleting task:', error);\n//       throw error;\n//     }\n//   },\n// };\n\n// export default TaskService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAG,uBAAuB;;AAEtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe;EACbC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpBC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxB,MAAMC,MAAM,GAAG,MAAML,KAAK,CAACM,GAAG,CAAE,GAAEL,MAAO,QAAO,CAAC;IACjD,OAAOI,MAAM,CAACE,IAAI;EACpB,CAAC;EACDC,OAAO,EAAE,MAAMC,IAAI,IAAG;IACpBN,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEK,IAAI,CAAC;IAC5B,MAAMJ,MAAM,GAAG,MAAML,KAAK,CAACU,IAAI,CAAE,GAAET,MAAO,QAAO,EAAE;MAAEQ;IAAK,CAAC,CAAC;IAC5D,OAAOJ,MAAM,CAACE,IAAI;IAClB;EACF,CAAC;EAEDI,YAAY,EAAE,MAAAA,CAAOC,EAAE,EAAEC,UAAU,KAAK;IACtCV,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE;MAAEQ,EAAE;MAAEC;IAAW,CAAC,CAAC;IAC/C,MAAMC,MAAM,GAAG,MAAMd,KAAK,CAACM,GAAG,CAAE,QAAO,CAAC;IACxC,MAAMS,IAAI,GAAGD,MAAM,CAACP,IAAI,CAACS,IAAI,CAACD,IAAI,IAAIA,IAAI,CAACH,EAAE,KAAKK,QAAQ,CAACL,EAAE,CAAC,CAAC;IAC/D,IAAI,CAACG,IAAI,EAAE;MACTZ,OAAO,CAACe,KAAK,CAAE,gBAAeN,EAAG,aAAY,CAAC;MAC9C,OAAO,IAAI;IACb;IACA,MAAMP,MAAM,GAAG,MAAML,KAAK,CAACmB,GAAG,CAAE,UAASP,EAAG,EAAC,EAAE;MAC7CQ,EAAE,EAAEL,IAAI,CAACH,EAAE;MACXS,IAAI,EAAEN,IAAI,CAACN,IAAI;MACfa,UAAU,EAAET;IACd,CAAC,CAAC;IACF,OAAOR,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDgB,UAAU,EAAE,MAAOX,EAAE,IAAK;IACxBT,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IACzB,MAAMC,MAAM,GAAG,MAAML,KAAK,CAACwB,MAAM,CAAE,UAASZ,EAAG,EAAC,CAAC;IACjD,OAAOP,MAAM;EACf;AACF,CAAC;;AAMD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}